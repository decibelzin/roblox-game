local RegisterCommand = require(game.ReplicatedStorage.Shared["register-command"])
local Players = game:GetService("Players")
local ChatMessage = require(game.ServerScriptService.Server.framework.modules["chat-message"])
local PlayerModule = require(game.ServerScriptService.Server.framework.modules.player)()
local UserIdModule = require(game.ServerScriptService.Server.framework.modules["user-id"])

RegisterCommand({
    name = "changeid",
    description = "Altera o User ID de um jogador espec√≠fico",
    aliases = { "setid", "alterid" },
    permissions = { "owner" } -- Apenas owners podem alterar IDs
}, function(player, params, message)
    local username = params[1]
    local newUserIdStr = params[2]

    -- Validar par√¢metros
    if not username then
        ChatMessage.sendError(player, "‚ùå Uso correto: /changeid <username> <novo_id>")
        return
    end

    if not newUserIdStr then
        ChatMessage.sendError(player, "‚ùå Voc√™ deve especificar o novo User ID!")
        return
    end

    -- Converter novo ID para n√∫mero
    local newUserId = tonumber(newUserIdStr)
    if not newUserId or newUserId <= 0 then
        ChatMessage.sendError(player, "‚ùå O novo User ID deve ser um n√∫mero positivo!")
        return
    end

    -- Buscar o usu√°rio pelo nome
    local success, targetRobloxId = pcall(function()
        return Players:GetUserIdFromNameAsync(username)
    end)

    if not success then
        ChatMessage.sendError(player, "‚ùå Usu√°rio '" .. username .. "' n√£o encontrado!")
        return
    end

    -- Verificar se o usu√°rio j√° possui um User ID
    local currentUserId = UserIdModule.getUserIdByRobloxId(targetRobloxId)
    
    if not currentUserId then
        ChatMessage.sendError(player, "‚ùå O usu√°rio '" .. username .. "' n√£o possui um User ID atribu√≠do!")
        return
    end

    -- Verificar se o novo ID √© diferente do atual
    if currentUserId == newUserId then
        ChatMessage.sendError(player, "‚ùå O usu√°rio '" .. username .. "' j√° possui o User ID " .. newUserId .. "!")
        return
    end

    -- Tentar alterar o User ID
    local changeSuccess = UserIdModule.changeUserId(targetRobloxId, newUserId)
    
    if not changeSuccess then
        ChatMessage.sendError(player, "‚ùå Falha ao alterar o User ID! Verifique os logs do servidor.")
        return
    end

    -- Atualizar cache se o jogador estiver online
    local targetPlayer = Players:GetPlayerByUserId(targetRobloxId)
    if targetPlayer then
        local playerData, playerClass = PlayerModule.get(targetPlayer, false)
        if playerData and playerClass then
            playerData.userId = newUserId
            print("üîÑ Cache atualizado para jogador online:", targetPlayer.Name)
        end
    end

    -- Confirmar sucesso
    local successMessage = "‚úÖ User ID alterado com sucesso!\n"
    successMessage = successMessage .. "üë§ Jogador: " .. username .. "\n"
    successMessage = successMessage .. "üÜî ID Anterior: " .. currentUserId .. "\n"
    successMessage = successMessage .. "üÜî Novo ID: " .. newUserId

    ChatMessage.sendSuccess(player, successMessage)
    
    -- Log da opera√ß√£o
    print("üîß [ADMIN] " .. player.Name .. " alterou o User ID de " .. username .. " de " .. currentUserId .. " para " .. newUserId)
end) 